{"mappings":"YAiCA,IAAMA,EAAUC,SAASC,cAAc,WACjCC,EAAYF,SAASC,cAAc,aACnCE,EAAcH,SAASC,cAAc,YACrCG,EAAaJ,SAASC,cAAc,aAgB1C,SAASI,EAAkBC,GACzBA,EAAIC,iBAUJ,IAGIC,EAAAF,EAAIG,cAAcC,UA8BxB,SAAwBC,GACtB,IAAMC,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,IAGvB,OAAOO,MAAM,6CAA8CN,GAASO,MAClE,SAACC,GACC,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,M,KArChBC,CAFa,CAAEC,MALXlB,EAFFmB,KAAQC,MAOYb,KALlBP,EADFqB,YAAeD,QASdT,MAAK,SAACW,GACL5B,EAAU6B,mBAAmB,YAcnC,SAA0BC,G,IAAEC,EAAFD,EAAEC,GAAIP,EAANM,EAAMN,MAAOX,EAAbiB,EAAajB,KACrC,MAAO,gBACCmB,OADeD,EAAG,gBAEnBC,OADCR,EAAM,kBACFQ,OAALnB,EAAK,kB,CAjBkCoB,CAAiBL,G,IAG5DM,OAAM,WACLhC,EAAWiC,UAAY,wB,IAExBC,SAAQ,WACPnC,EAAYkC,UAAY,GACxBE,YAAW,WACTnC,EAAWiC,UAAY,E,GACtB,I,IA/CTtC,EAAQyC,iBAAiB,SAEzB,WACErC,EAAYkC,UAAa,iUAOZrC,SAASC,cAAc,gBAC/BuC,iBAAiB,SAAUnC,E","sources":["src/js/task-17.js"],"sourcesContent":["// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\n\n// CRUD\n\n// R - GET\n// fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n//   .then((response) => response.json())\n//   .then((json) => console.log(json));\n\n//   C - POST\n\n// const options = {\n//   method: \"POST\",\n//   headers: {\n//     \"Content-type\": \"application/json\",\n//   },\n//   body: JSON.stringify({\n//     title: \"Hello from JS\",\n//     body: \"qweryuiqWAERTY\",\n//     userId: 12,\n//   }),\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts',options)\n// .then(resp =>{\n//     if(!resp.ok){\n//         throw new Error(resp.statusText)\n//     }\n//     return resp.json()\n// })\n// .then(data => console.log(data))\n// .catch(err => console.log(err))\n\nconst addPost = document.querySelector(\".js-add\");\nconst listPosts = document.querySelector(\".js-posts\");\nconst formWrapper = document.querySelector(\".js-form\");\nconst errMessage = document.querySelector(\".js-error\");\n\naddPost.addEventListener(\"click\", handlerAddPost);\n\nfunction handlerAddPost() {\n  formWrapper.innerHTML = `<form action=\"submit\" class=\"js-form-add\" style:\"style=\"display: flex; flex-direction: column\"\n\"  >\n        <input type=\"text\" name=\"name\" placeholder='Add title post'>\n        <textarea name=\"description\" cols=\"30\" rows=\"10\" placeholder='Add post'></textarea>\n        <button>Додати пост</button>\n    </form>`;\n\n  const form = document.querySelector(\".js-form-add\");\n  form.addEventListener(\"submit\", handlerFormSubmit);\n}\n\nfunction handlerFormSubmit(evt) {\n  evt.preventDefault();\n  //   const data = new FormData(evt.currentTarget)\n  //   for (var key of data.keys()) {\n  //     console.log(key);\n  //  }\n  //   console.log();\n  // data.forEach(elem => console.log(elem))\n\n  //   const { name, description } = evt.currentTarget.elements;\n\n  const {\n    name: { value: title },\n    description: { value: body },\n  } = evt.currentTarget.elements;\n  //   const data = {\n  //     title: name.value,\n  //     body: description.value,\n  //   };\n  const data = { title, body };\n\n  addPostService(data)\n    .then((obj) => {\n      listPosts.insertAdjacentHTML(\"beforeend\", createPostMarkup(obj));\n      // listPosts.innerHTML = createPostMarkup(obj)\n    })\n    .catch(() => {\n      errMessage.innerHTML = \"Не можливо додати пост\";\n    })\n    .finally(() => {\n      formWrapper.innerHTML = \"\";\n      setTimeout(() => {\n        errMessage.innerHTML = \"\";\n      }, 2000);\n    });\n}\n\nfunction createPostMarkup({ id, title, body }) {\n  return `<li data-id=\"${id}\">\n    <h2>${title}</h2>\n    <p>${body}</p>\n    </li>`;\n}\n\nfunction addPostService(data) {\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  };\n\n  return fetch(\"https://jsonplaceholder.typicode.com/posts\", options).then(\n    (resp) => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n    }\n  );\n}\n\n// ПЕРЕРВА ДО 21.25\n\n// U PUT PATCH\n\n// PUT\n// {\n//     id:101,\n//     title: 'Hello fish',\n//     body: \"Hello dog\",\n//     userId : 1\n// }\n\n// {\n//     id:101.\n//     title: 'Hello fish'\n// }\n\n//PATCH\n\n// {\n//     id:101,\n//     title: 'Hello fish',\n//     body: \"Hello dog\",\n//     userId : 1\n// }\n\n// {\n//     id:101.\n//     title: 'Hello fish'\n// }\n\n// const options = {\n//   method: \"PUT\",\n//   body: JSON.stringify({\n//     id: 1,\n//     title: \"cat\",\n//   }),\n//   headers: {\n//     \"Content-type\": \"application/json\",\n//   },\n// };\n\n// fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n// .then(resp => resp.json()).then(data => console.log(data));\n\n\n// const options = {\n//     method: \"PATCH\",\n//     body: JSON.stringify({\n//       id: 1,\n//       title: \"cat\",\n//       body : 'Hello dear cat',\n//     }),\n//     headers: {\n//       \"Content-type\": \"application/json\",\n//     },\n//   };\n  \n//   fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n//   .then(resp => resp.json()).then(data => console.log(data)).then(err => console.log(err));\n\n// const options ={\n//     method: \"DELETE\"\n// }\n// fetch('https://jsonplaceholder.typicode.com/posts/1',options)\n// .then(resp => console.log(resp))"],"names":["$54115741f0e57894$var$addPost","document","querySelector","$54115741f0e57894$var$listPosts","$54115741f0e57894$var$formWrapper","$54115741f0e57894$var$errMessage","$54115741f0e57894$var$handlerFormSubmit","evt","preventDefault","_elements","currentTarget","elements","data","options","method","headers","body","JSON","stringify","fetch","then","resp","ok","Error","statusText","json","$54115741f0e57894$var$addPostService","title","name","value","description","obj","insertAdjacentHTML","param","id","concat","$54115741f0e57894$var$createPostMarkup","catch","innerHTML","finally","setTimeout","addEventListener"],"version":3,"file":"task-17.1bd9426d.js.map"}