{"mappings":"YAgGA,IAAMA,EAASC,SAASC,cAAc,aAChCC,EAAW,gCACXC,EAAW,qBACXC,EAAU,mCACVC,EAAOL,SAASC,cAAc,YAEhCK,EAAc,EAOdC,EAAW,IAAIC,sBACnB,SAAgBC,EAASC,GACvBC,QAAQC,IAAIH,GACZA,EAAQI,SAAQ,SAACC,GACXA,EAAMC,gBAERC,EADAV,GAAe,GAEZW,MAAK,SAACC,GACLb,EAAKc,mBAAmB,YAAaC,EAAaF,EAAKG,UACnDH,EAAKI,OAASJ,EAAKK,aACrBb,EAASc,UAAUzB,E,IAGtB0B,OAAM,SAACC,G,OAAQf,QAAQC,IAAIc,E,SAnBtB,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,IAqBb,SAAST,EAAaU,GACpB,OAAOA,EACJC,KACC,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MAAY,sDACkCC,OAArBF,EAAY,WACjDE,OAD0DD,EAAM,gBAC1DC,OAAND,EAAM,e,IAGXE,KAAK,G,CAGV,SAASpB,I,IAAYM,EAAAe,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAC1B,OAAOE,MAAM,GAAcJ,OAAXjC,GAA+BiC,OAApBhC,EAAS,aAA2BgC,OAAhB/B,EAAQ,UAAa+B,OAALb,IAAQL,MACrE,SAACuB,GACC,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,M,IAIlB5B,IACGC,MAAK,SAACC,GACLb,EAAKc,mBAAmB,YAAaC,EAAaF,EAAKG,UACvDd,EAASsC,QAAQ9C,E,IAElB0B,OAAM,SAACC,G,OAAQf,QAAQC,IAAIc,E","sources":["src/js/task-16.js"],"sourcesContent":["// XJlq9OFMcHAy8pAQK7xj\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n// const BASE_URL = \"https://the-one-api.dev/v2/\";\n// const END_POINT = \"character\";\n// const KEY = 'YZ3dzviq1QC3f0oHGhfv';\n// function getCharacter() {\n//   const param = new URLSearchParams({\n//     limit: 30,\n//     page: 1,\n//   });\n\n// const option = {\n//     method: 'GET',\n//     headers:{\n//         Authorization: `Bearer ${KEY}`\n//     }\n// }\n\n//   fetch(`${BASE_URL}${END_POINT}?${param}`,option).then(resp => console.log(resp))\n// }\n// getCharacter()\n// const target = document.querySelector(\".js-guard\");\n// let options = {\n//   root: null,\n//   rootMargin: \"200px\",\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(callback, options);\n// function callback(evt){\n// console.log(evt);\n// }\n// const BASE_URL = \"https://api.themoviedb.org/3/\";\n// const ENDPOINT = \"trending/movie/day\";\n// const API_KEY = \"345007f9ab440e5b86cef51be6397df1\";\n// const list = document.querySelector(\".js-list\");\n// const loadMore = document.querySelector(\".js-load\");\n// let currentPage = 1;\n\n// loadMore.addEventListener(\"click\", onLoad);\n\n// function onLoad() {\n//   currentPage += 1;\n//   getTrending(currentPage)\n//     .then((data) => {\n//       list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results));\n\n//       if (data.page === data.total_pages) {\n//         loadMore.hidden = true;\n//       }\n//     })\n//     .catch((err) => console.log(err));\n// }\n\n// function getTrending(page = 1) {\n//   return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n//     (resp) => {\n//       if (!resp.ok) {\n//         throw new Error(resp.statusText);\n//       }\n\n//       return resp.json();\n//     }\n//   );\n// }\n// getTrending()\n//   .then((data) => {\n//     list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results));\n//     observer.observe(target)\n//     if (data.page !== data.total_pages) {\n//       loadMore.hidden = false;\n//     }\n//   })\n//   .catch((err) => console.log(err));\n\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({ poster_path, title }) => `<li>\n//     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n//     <h2>${title}</h2>\n// </li>`\n//     )\n//     .join(\"\");\n// }\n\n// // ПЕРЕРВА ДО 22.00\n\n// let counter = 0;\n// document.addEventListener(\"scroll\", onScroll);\n\n// function onScroll() {\n//   counter += 1;\n//   console.log(counter);\n// }\n\nconst target = document.querySelector(\".js-guard\");\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst ENDPOINT = \"trending/movie/day\";\nconst API_KEY = \"ad597f58480ee2b54bd116c59b3fba0a\";\nconst list = document.querySelector(\".js-list\");\n\nlet currentPage = 1;\nlet options = {\n  root: null,\n  rootMargin: \"300px\",\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\nfunction onLoad(entries, observer) {\n  console.log(entries);\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      currentPage += 1;\n      getTrending(currentPage)\n        .then((data) => {\n          list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results));\n          if (data.page === data.total_pages) {\n            observer.unobserve(target);\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  });\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ poster_path, title }) => `<li>\n    <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n    <h2>${title}</h2>\n</li>`\n    )\n    .join(\"\");\n}\n\nfunction getTrending(page = 1) {\n  return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(\n    (resp) => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }\n  );\n}\ngetTrending()\n  .then((data) => {\n    list.insertAdjacentHTML(\"beforeend\", createMarkup(data.results));\n    observer.observe(target);\n  })\n  .catch((err) => console.log(err));"],"names":["$22c206d4e6ad69d0$var$target","document","querySelector","$22c206d4e6ad69d0$var$BASE_URL","$22c206d4e6ad69d0$var$ENDPOINT","$22c206d4e6ad69d0$var$API_KEY","$22c206d4e6ad69d0$var$list","$22c206d4e6ad69d0$var$currentPage","$22c206d4e6ad69d0$var$observer","IntersectionObserver","entries","observer1","console","log","forEach","entry","isIntersecting","$22c206d4e6ad69d0$var$getTrending","then","data","insertAdjacentHTML","$22c206d4e6ad69d0$var$createMarkup","results","page","total_pages","unobserve","catch","err","root","rootMargin","threshold","arr","map","param","poster_path","title","concat","join","arguments","length","fetch","resp","ok","Error","statusText","json","observe"],"version":3,"file":"task-16.1de4f802.js.map"}